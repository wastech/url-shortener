version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine # Recommended to use a specific, stable version like 16-alpine
    container_name: url-shortener-postgres # Good to explicitly name containers
    environment:
      POSTGRES_DB: url_shortener_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin@123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d url_shortener_db"] # Added -d for specific DB
      interval: 5s # More frequent check helps with startup
      timeout: 5s
      retries: 5
      start_period: 20s # Crucial for giving Postgres time to fully initialize
    networks:
      - url-shortener-net # Explicitly define network for services

  # Redis for Key Generation Service (KGS) and Caching
  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - url-shortener-net
  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0 # Use a specific version, `latest` can be risky
    container_name: url-shortener-zookeeper # Explicitly name container
    ports:
      - "2181:2181"
#      - "8081:8080"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes: # <--- ADD THIS SECTION FOR ZK DATA PERSISTENCE
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    healthcheck:
        test: [ "CMD", "echo", "imok" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 15s # Give Zookeeper time to start
    networks:
      - url-shortener-net # Explicitly define network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0 # Use a specific version
    container_name: url-shortener-kafka # Explicitly name container
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093 # Added PLAINTEXT_HOST for external access if needed
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # Required for advertised listeners
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # Speeds up consumer group rebalance
    ports:
      - "9092:9092"
      - "9093:9093" # Expose external port
    depends_on:
      zookeeper:
        condition: service_healthy # Depend on Zookeeper being healthy
    healthcheck: # Added healthcheck for Kafka
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Kafka can take a while to start
    networks:
      - url-shortener-net # Explicitly define network

  # Spring Boot Application
  app: # Renamed service from 'url-shortener' to 'app' for common convention and clarity
    build:
      context: . # Correct build context: The directory where docker-compose.yml and Dockerfile are
      dockerfile: Dockerfile # Correct Dockerfile path
    container_name: url-shortener-app # Explicitly name container
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Removed SPRING_PROFILES_ACTIVE=docker - this would look for application-docker.yml
      # Instead, we directly provide key Spring Boot configurations as environment variables
      # These will override values in application.yml if present, or provide default values
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/url_shortener_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin@123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      # Ensure trusted packages for Kafka JSON deserialization match your actual package
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "com.wastech.url_shortener.model"
    networks:
      - url-shortener-net

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  zookeeper_data: # <--- ADD THIS
  zookeeper_log:  # <--- ADD THIS

networks:
  url-shortener-net:
    driver: bridge