version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: url-shortener-postgres
    environment:
      POSTGRES_DB: url_shortener_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin@123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d url_shortener_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - url-shortener-net

  # Redis for Key Generation Service (KGS) and Caching
  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - url-shortener-net
  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: url-shortener-zookeeper
    ports:
      - "2181:2181"
#      - "8081:8080"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    healthcheck:
        test: [ "CMD", "echo", "imok" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 15s
    networks:
      - url-shortener-net

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: url-shortener-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - url-shortener-net

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener-app
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/url_shortener_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin@123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "com.wastech.url_shortener.model"
    networks:
      - url-shortener-net

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  zookeeper_data:
  zookeeper_log:

networks:
  url-shortener-net:
    driver: bridge